plugins {
    id "org.jetbrains.kotlin.jvm"
    id "com.github.johnrengelman.shadow"
}

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"
    compileOnly "io.arrow-kt:arrow-annotations:$ARROW_VERSION"

    testImplementation "io.kotlintest:kotlintest-runner-junit4:$KOTLIN_TEST_VERSION"
    testImplementation 'com.github.arrow-kt.arrow-meta:testing-plugin:-SNAPSHOT'

    testCompileOnly "org.jetbrains.kotlin:kotlin-compiler-embeddable:$KOTLIN_VERSION"
    testImplementation("io.kotlintest:kotlintest-runner-junit4:$KOTLIN_TEST_VERSION") {
        exclude group: "io.arrow-kt", module: "arrow-core-data"
        exclude group: "io.arrow-kt", module: "arrow-core-extensions"
    }

    testCompileOnly "io.arrow-kt:arrow-core-data:$ARROW_VERSION"
    testRuntimeOnly("io.arrow-kt:arrow-annotations:$ARROW_VERSION") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib"
    }
    testRuntimeOnly("io.arrow-kt:arrow-core-data:$ARROW_VERSION") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib"
    }

    // To run :create-plugin:shadowJar when building this project
    api project(path: ':create-plugin', configuration: 'shadow')
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "$JVM_TARGET_VERSION"
        freeCompilerArgs = ["-Xplugin=${project.rootDir}/create-plugin/build/libs/create-plugin-all.jar"]
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "$JVM_TARGET_VERSION"
    }
}

shadowJar {
    configurations = [project.configurations.compileOnly]
}

jar {
    manifest {
        attributes(
                "Main-Class": "com.debuglog.DebugLogExampleKt"
        )
    }
}
